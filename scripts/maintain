#!/bin/bash
bold=$(tput bold)
normal=$(tput sgr0)

echo "${bold}[OS version]${normal}"
cat /etc/debian_version
echo "${bold}[Installed kernels]${normal}"
dpkg --list | grep 'Kernel Image'
echo "${bold}[Time and NTP]${normal}"
timedatectl status | grep 'Time zone\|synchronized\|NTP'
echo "${bold}[Local IP]${normal}"
hostname -i | awk '{print $NF}'
echo "${bold}[Aliases]${normal}"
cat ~/.oh-my-zsh/custom/*.zsh | sed -e '/#/d' -e '/^$/d' | cut -c7-
echo "${bold}[Critical services]${normal}"
systemctl --type=service | grep 'docker\|smartmontools'
echo "${bold}[Failed services]${normal}"
systemctl --failed
echo "${bold}[Orphaned configs]${normal}"
dpkg --list | grep '^rc '

echo ""
echo "${bold}[Sources]${normal}"
read -p "Press any key to continue..." -n1 -s
echo ""
cat /etc/apt/sources.list /etc/apt/sources.list.d/*.list | less
echo "${bold}[Packages]${normal}"
read -p "Press any key to continue..." -n1 -s
echo ""
comm -12 <(grep 'sudo apt-get install' ~/.zsh_history | sed '/|/d' | awk '{$1=$2=$3=$4=""; print $0}' | sed s/\\s/\\n/g | sort -n) <(dpkg --list | awk '{print $2}' | sed 's/:amd64//' | sort -n) | sed '/^$/d' > ~/.pkglist
less ~/.pkglist
echo "${bold}[Network configuration]${normal}"
read -p "Press any key to continue..." -n1 -s
echo ""
cat <(echo "[Interfaces]") /etc/network/interfaces <(echo "") <(echo "[Hostname]") /etc/hostname <(echo "") <(echo "[DNS servers]") /etc/resolv.conf <(echo "") <(echo "[Hosts]") /etc/hosts | less
echo "${bold}[ZSH configuration]${normal}"
read -p "Press any key to continue..." -n1 -s
echo ""
cat <(cat ~/.zshrc | sed -e '/#/d' -e '/^$/d') | less
echo "${bold}[Filesystem]${normal}"
read -p "Press any key to continue..." -n1 -s
echo ""
cat <(echo "[Mounts]") <(lsblk) <(echo "") <(echo "[Usage]") <(df -h) | less
echo "${bold}[ZPool statistics]${normal}"
read -p "Press any key to continue..." -n1 -s
echo ""
cat <(echo "[Status]") <(sudo zpool status) <(echo "") <(echo "[List]") <(sudo zpool list) <(echo "") <(echo "[IOstat]") <(sudo zpool iostat) | less
echo "${bold}[Docker configuration]${normal}"
read -p "Press any key to continue..." -n1 -s
echo ""
cat <(echo "[Docker images]") <(sudo docker images -a) <(echo "") <(echo "[Docker containers]") <(sudo docker ps -a) <(echo "") <(echo "[Docker volumes]") <(sudo docker volume ls) | less
echo "${bold}[Logfile errors]${normal}"
read -p "Press any key to continue..." -n1 -s
echo ""
sudo journalctl -p 3 -xb | less
echo "${bold}[Backup files]${normal}"
read -p "Press any key to continue..." -n1 -s
echo ""
sudo find / -path /mnt -prune -o -iname "*.bak*" -print | sed '/var/d' | less
echo "${bold}[Broken softlinks]${normal}"
read -p "Press any key to continue..." -n1 -s
echo ""
sudo find / -path /mnt -prune -o -xtype l -print | sed -e '/proc/d' -e '/run/d' -e '/var/d' | less

echo ""
echo "${bold}[DONE]${normal}"
