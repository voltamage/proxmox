#!/bin/bash
bold=$(tput bold)
normal=$(tput sgr0)

echo "${bold}[UPDATING]${normal}"
echo "${bold}[Updating SOURCES (Adding docker)]${normal}"
sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak
sudo apt-get -y install apt-transport-https ca-certificates gnupg2 software-properties-common
echo ": sudo apt-get install apt-transport-https ca-certificates gnupg2 software-properties-common" >> ~/.zsh_history
curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -
sudo add-apt-repository "deb [arch=armhf] https://download.docker.com/linux/debian $(lsb_release -cs) stable"
sudo sed -i -e '/deb-src/d' -e '/^$/d' /etc/apt/sources.list
sudo apt-get update

echo ""
echo "${bold}[INSTALLING]${normal}"
echo "${bold}[Installing PACKAGES]${normal}"
sudo apt-get -y install aria2 docker-ce docker-ce-cli docker-compose htop intel-microcode iotop mediainfo ncdu needrestart nload ranger smartmontools sshfs tmux vim
echo ": sudo apt-get install aria2 docker-ce docker-ce-cli docker-compose htop intel-microcode iotop mediainfo ncdu needrestart nload ranger smartmontools sshfs tmux vim" >> ~/.zsh_history
echo "${bold}[Installing NEOFETCH (no recommends)]${normal}"
sudo apt-get -y install neofetch --no-install-recommends
echo ": sudo apt-get install neofetch" >> ~/.zsh_history

echo ""
echo "${bold}[Updating SYSTEM]${normal}"
sudo apt-get -y dist-upgrade

echo ""
echo "${bold}[Installing SCRIPTS]${normal}"
echo "${bold}[Installing brsync]${normal}"
curl https://raw.githubusercontent.com/voltamage/notes/master/armbian/scripts/brsync > ~/scripts/brsync -#
sudo chmod u+x ~/scripts/brsync
echo "${bold}[Installing fnd]${normal}"
curl https://raw.githubusercontent.com/voltamage/notes/master/armbian/scripts/fnd > ~/scripts/fnd -#
sudo chmod u+x ~/scripts/fnd
echo "${bold}[Installing maintain]${normal}"
curl https://raw.githubusercontent.com/voltamage/notes/master/armbian/scripts/maintain > ~/scripts/maintain -#
sudo chmod u+x ~/scripts/maintain
echo "${bold}[Installing mfnd]${normal}"
curl https://raw.githubusercontent.com/voltamage/notes/master/armbian/scripts/mfnd > ~/scripts/mfnd -#
sudo chmod u+x ~/scripts/mfnd
echo "${bold}[Installing msrsync]${normal}"
curl https://raw.githubusercontent.com/jbd/msrsync/master/msrsync > ~/scripts/msrsync -#
sudo chmod u+x ~/scripts/msrsync
echo "${bold}[Installing rmshit.py]${normal}"
curl https://raw.githubusercontent.com/lahwaacz/Scripts/master/rmshit.py > ~/scripts/rmshit.py -#
sed -i '/.viminfo/d' ~/scripts/rmshit.py
sudo chmod u+x ~/scripts/rmshit.py
echo "${bold}[Installing ALIASES]${normal}"
curl https://raw.githubusercontent.com/voltamage/notes/master/armbian/.oh-my-zsh/custom/aliases.zsh > ~/.oh-my-zsh/custom/aliases.zsh -#

echo ""
echo "${bold}[CLEANING]${normal}"
echo "${bold}[Cleaning orphaned packages]${normal}"
sudo apt-get autoremove --purge
echo "${bold}[Cleaning package caches]${normal}"
sudo apt-get clean
echo "${bold}[Cleaning junk directories]${normal}"
sudo rm -rf /root/.lesshst
sudo rm -rf /root/.wget-hsts
rm -rf ~/.lesshst
rm -rf ~/.wget-hsts
/home/$USER/scripts/rmshit.py

echo ""
echo "${bold}[CONFIGURING]${normal}"
echo "${bold}[Configuring TIMEZONE]${normal}"
sudo timedatectl set-timezone America/Los_Angeles
sudo timedatectl set-ntp true
echo "${bold}[Configuring DISK SHUTDOWN]${normal}"
curl https://dn.odroid.com/5422/script/odroid.shutdown > /tmp/odroid.shutdown -#
sudo install -o root -g root -m 0755 /tmp/odroid.shutdown /lib/systemd/system-shutdown/odroid.shutdown
rm /tmp/odroid.shutdown
echo "${bold}[Configuring PACKAGES]${normal}"
echo "${bold}[Configuring aria2]${normal}"
mkdir ~/.config/aria2
curl https://raw.githubusercontent.com/voltamage/notes/master/armbian/.config/aria2/aria2.conf > ~/.config/aria2/aria2.conf -#
echo "${bold}[Configuring htop]${normal}"
sudo rm -rf /root/.config/htop
sed -i -e '/tree_view/c\tree_view=1' ~/.config/htop/htoprc
echo "${bold}[Configuring neofetch]${normal}"
mkdir ~/.config/neofetch
curl https://raw.githubusercontent.com/voltamage/notes/master/armbian/.config/neofetch/config.conf > ~/.config/neofetch/config.conf -#
echo "${bold}[Configuring vim]${normal}"
echo "SELECTED_EDITOR="/usr/bin/vim.basic"" > ~/.selected_editor
sudo cp ~/.selected_editor /root
echo "${bold}[Configuring .pkglist]${normal}"
echo ": sudo apt-get install curl git zsh" >> ~/.zsh_history
comm -12 <(grep 'sudo apt-get install' ~/.zsh_history | sed '/|/d' | awk '{$1=$2=$3=$4=""; print $0}' | sed s/\\s/\\n/g | sort -n) <(dpkg --list | awk '{print $2}' | sed 's/:armhf//' | sort -n) | sed '/^$/d' > ~/.pkglist

echo ""
echo "${bold}[REVIEW]${normal}"
echo "${bold}[Review sources]${normal}"
cat /etc/apt/sources.list /etc/apt/sources.list.d/*.list
read -p "Press any key to continue..." -n1 -s
echo ""
echo "${bold}[Review timezone]${normal}"
timedatectl
read -p "Press any key to continue..." -n1 -s
echo ""
echo "${bold}[Review locale]${normal}"
locale -a
read -p "Press any key to continue..." -n1 -s
echo ""
echo "${bold}[Review disk shutdown]${normal}"
cat /lib/systemd/system-shutdown/odroid.shutdown
read -p "Press any key to continue..." -n1 -s
echo ""
echo "${bold}[Review critical services]${normal}"
systemctl --type=service | grep 'docker\|smartd'
read -p "Press any key to continue..." -n1 -s
echo ""
echo "${bold}[Review aria2]${normal}"
cat ~/.config/aria2/aria2.conf
read -p "Press any key to continue..." -n1 -s
echo ""
echo "${bold}[Review htop]${normal}"
cat ~/.config/htop/htoprc | grep tree_view
read -p "Press any key to continue..." -n1 -s
echo ""
echo "${bold}[Review neofetch]${normal}"
neofetch
read -p "Press any key to continue..." -n1 -s
echo ""
echo "${bold}[Review vim]${normal}"
echo "[Root]"
sudo cat /root/.selected_editor
echo "[User]"
cat ~/.selected_editor
read -p "Press any key to continue..." -n1 -s
echo ""
echo "${bold}[Review .zshrc]${normal}"
cat <(cat ~/.zshrc | sed -e '/#/d' -e '/^$/d')
read -p "Press any key to continue..." -n1 -s
echo ""
echo "${bold}[Review aliases]${normal}"
cat ~/.oh-my-zsh/custom/aliases.zsh

echo ""
echo "${bold}[Review .pkglist]${normal}"
read -p "Press any key to continue..." -n1 -s
echo ""
less ~/.pkglist
echo "${bold}[Review filesystem]${normal}"
read -p "Press any key to continue..." -n1 -s
echo ""
cat <(echo "[user folder]") <(ls -la ~/) <(echo "") <(echo "[scripts folder]") <(ls -la ~/scripts) <(echo "") <(echo "[root folder]") <(sudo ls -la /root) <(echo "") <(echo "[tmp folder]") <(ls -la /tmp) <(echo "") | less

echo ""
echo "${bold}[POSTCHECKING]${normal}"
echo "${bold}[Checking reboot]${normal}"
sudo needrestart

echo ""
echo "${bold}[DONE]${normal}"
exec zsh
